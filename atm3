#include<stdio.h>
#include<stdlib.h>
#include<string.h>

struct Account
{
	char username[100];
	char password[100];

	struct Account * next;
};
typedef struct Account Account;

Account * head=NULL;
Account * tail=NULL;
Account * curAccount=NULL;

int findAccount(Account a)
{
	Account * curP=head;
	while(curP!=NULL)
	{
		if((strcmp(curP->username,a.username)==0)&&strcmp(curP->password,a.password)==0)
		{
			curAccount=curP;
			return 1;
		}
		curP=curP->next;
	}
	return 0;
}

void updatePassword()
{
	printf("请输入旧密码：");
	char oldPassword[100];
	scanf("%s",oldPassword);
	for(int i=0;i<3;i++)
	{
		if(strcmp(oldPassword,curAccount->password)==0)
		{
		printf("请输入新密码：");
		scanf("%s",curAccount->password);
		if(strcmp(oldPassword,curAccount->password)==0)
		{
			printf("新密码与旧密码相同，输入错误！\n");
		}
		else
		{
			printf("密码修改成功！\n");
			break;
		}
		}
		else
			printf("密码错误！不能修改！\n");
	}
}

void signIn()
{
	for(int i=0;i<3;i++)
	{
		Account a;
		printf("请输入账号：\n");
		scanf("%s",a.username);
		
		printf("请输入密码：\n");
		scanf("%s",a.password);
		
		if(findAccount(a))
		{
			printf("登录成功！\n");
			updatePassword();
			break;
		}
		else
			printf("登录失败！\n");
	}
}

int loadData()
{
	FILE* fp=fopen("D:/atm.txt","r");
	if(fp==NULL)
		return 0;
	else
	{
		while(!feof(fp))
		{
			Account * newNode=(Account *)malloc(sizeof(Account));
			
			newNode->next=NULL;
			fscanf(fp,"%s %s\n",newNode->username,newNode->password);
			
			if(head==NULL)
			{
				head=newNode;
				tail=newNode;
			}
			else
			{
				tail->next=newNode;
				tail=newNode;
			}
		}
		return 1;
	}
}

void printLinkedList()
{
	Account * curP=head;
	while(curP!=NULL)
	{
		printf("%s\t%s\n",curP->username,curP->password);
		curP=curP->next;
	}
}

int main()
{
	int i=loadData();
	if(i==1)
		printf("加载成功！\n"); 
	else
		printf("加载失败！\n");
	printLinkedList();
	
	signIn();
	return 0;
}
